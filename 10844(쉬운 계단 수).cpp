#include <iostream>
using namespace std;

#define MAX 1000000000

int dp[101][11];					//dp[n][k] : 자리수가 n일 때의 일의 자리 수가 k인 계단의 수 
									//k=10까지 가능하게 한 이유는 디버깅해보니 dp[a][10]=1로 인식하기 때문(k=9까지 존재하는 경우)

int main()
{
	int n;							//수의 길이
	int sum = 0;					//자리수 n일 때의 계단의 총 수

	cin >> n;

	for (int i = 1; i < 10; i++)
		dp[1][i] = 1;

	for (int i = 2; i <= n; i++)
	{
		dp[i][0] = dp[i-1][1];		//왜냐하면 모든 경우, 십의 자리가 1인 경우만 일의 자리는 0이 가능!

		for (int j = 1; j < 10; j++)
			dp[i][j] = (dp[i - 1][j - 1] + dp[i - 1][j + 1]) % MAX;
	}

	for (int i = 0; i < 10; i++)
		sum = (sum + dp[n][i]) % MAX;

	cout << sum << endl;

	return 0;
}

//n = 1 -> 9개
//
//1 2 3 4 5 6 7 8 9
//
//n = 2 -> 17개
//
//10 12 / 21 23 / 32 34 / 43 45 / 54 56 / 65 67 / 76 78 / 87 89 / 98
//
//n = 3
//
//101 / 121 123 / 132 134 / 143 145 / 154 156 / 165 167 / 176 178 / 187 189 / 198
//
//210 212 / 232 234 / 243 245 / 254 256 / 265 267 / 276 278 / 287 289 / 298 .....
//
//n / k 0 1 2 3 4 5 6 7 8 9
//1     0 1 1 1 1 1 1 1 1 1
//2     1 1 2 2 2 2 2 2 2 1
//3     1 3 3 4 4 4 4 4 3 2
